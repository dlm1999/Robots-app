{"version":3,"sources":["reportWebVitals.js","Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","Searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","response","json","users","filteredRobots","this","filter","toLowerCase","includes","length","Component","ReactDOM","render","document","getElementById"],"mappings":"uLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mCCMCQ,EAXF,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,KAAKC,EAAY,EAAZA,MAAMC,EAAM,EAANA,GACtB,OACI,sBAAKC,UAAY,sDAAjB,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA4BH,EAA5B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCaLK,EAlBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OACf,OACI,8BAEKA,EAAOC,KAAI,SAACC,EAAKC,GACd,OAAQ,cAAC,EAAD,CAERR,GAAMK,EAAOG,GAAGR,GAChBF,KAAQO,EAAOG,GAAGV,KAClBC,MAASM,EAAOG,GAAGT,OAHZS,SCGRC,EAVG,SAAC,GAA+B,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aAC7B,OACI,qBAAKV,UAAY,MAAjB,SACI,uBAAOA,UAAY,mCACnBW,KAAK,SACLC,YAAc,gBACdC,SAAYH,OCGTI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAS,CAACC,UAAU,SAASC,OAAO,kBAAkBC,OAAO,SAAlE,SACKJ,EAAMK,YCsCJC,G,wDApCX,aAAc,IAAD,8BACT,gBAaJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAbzC,EAAKC,MAAQ,CACTxB,OAAQ,GACRqB,YAAY,IAJP,E,qDAQb,WAAoB,IAAD,OACfI,MAAM,8CACLvC,MAAK,SAAAwC,GAAQ,OAAGA,EAASC,UACzBzC,MAAK,SAAA0C,GAAK,OAAG,EAAKR,SAAS,CAACpB,OAAO4B,S,oBAMxC,WAAS,IAAD,OACEC,EAAiBC,KAAKN,MAAMxB,OAAO+B,QAAO,SAAA/B,GAC5C,OAAOA,EAAOP,KAAKuC,cAAcC,SAAS,EAAKT,MAAMH,YAAYW,kBAErE,OAAgC,IAA7BF,KAAKN,MAAMxB,OAAOkC,OACV,4CAGH,sBAAKtC,UAAY,KAAjB,UACI,oBAAID,GAAK,QAAQC,UAAU,KAA3B,yBACA,cAAC,EAAD,CAAWU,aAAgBwB,KAAKZ,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,CAAUlB,OAAU6B,a,GA9B1BM,c,MCAlBC,IAASC,OACD,cAAC,EAAD,IACPC,SAASC,eAAe,SAKzBxD,M","file":"static/js/main.9dd350e5.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = ({name,email,id})=>{\r\n    return(\r\n        <div className = 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt=\"robots\" src = {`https://robohash.org/${id}?200x200`} ></img>\r\n            <div>\r\n                <h1>{name}</h1>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) =>{   \r\n    return(\r\n        <div>\r\n            {\r\n             robots.map((user,i)=>{\r\n                return (<Card \r\n                key = {i} \r\n                id = {robots[i].id} \r\n                name = {robots[i].name} \r\n                email = {robots[i].email}\r\n                />\r\n                )                \r\n            })\r\n        }\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({Searchfield, searchChange}) =>{\r\n    return(\r\n        <div className = 'pa2'>\r\n            <input className = 'pa3 ba b--green bg-lightest-blue' \r\n            type='search' \r\n            placeholder = 'search robots'  \r\n            onChange = {searchChange} />  \r\n        </div>\r\n    );\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\n\r\nconst Scroll = (props) =>{\r\n    return(\r\n        <div style = {{overflowY:'scroll',border:'5px solid black',height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Scroll;\r\n","import React, {Component} from 'react';\r\nimport CardList from '../Components/CardList';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport Scroll from '../Components/Scroll';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield:''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=> response.json())\r\n        .then(users =>this.setState({robots:users}));\r\n    }\r\n\r\n    onSearchChange = (event) =>{\r\n        this.setState({searchfield: event.target.value})\r\n        }\r\n    render(){\r\n        const filteredRobots = this.state.robots.filter(robots=>{\r\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n        });\r\n        if(this.state.robots.length === 0){\r\n            return <h1>Loading...</h1>\r\n        }else{    \r\n            return(\r\n                <div className = 'tc'>\r\n                    <h1 id = \"title\" className=\"f1\">RoboFriends</h1>\r\n                    <SearchBox searchChange = {this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <CardList robots = {filteredRobots}/>\r\n                    </Scroll>\r\n                </div>\r\n             );\r\n        }     \r\n   }\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './Containers/App';\nimport 'tachyons';\n\nReactDOM.render(\n        <App/>\n,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}